version: '3.8'

services:
  nodeserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: node-sample-app
    stdin_open: true # for docker run -i
    tty: true # for docker run -t
    container_name: node-sample-app-container
    restart: unless-stopped
    # networks:
    #   - app-network

  nginx-webserver:
    image: nginx:mainline-alpine
    container_name: nginx-webserver
    restart: always
    build:
        context: ./nginx
        dockerfile: Dockerfile
    ports:
      - "80:80"
    # volumes:
    #   - web-root:/var/www/html
    #   - ./nginx:/etc/nginx/conf.d
    # #   - certbot-etc:/etc/letsencrypt
    # #   - certbot-var:/var/lib/letsencrypt
    # depends_on:
    #   - nodejs
    # networks:
    #   - app-network

#   certbot:
#     image: certbot/certbot
#     container_name: certbot
#     volumes:
#       - certbot-etc:/etc/letsencrypt
#       - certbot-var:/var/lib/letsencrypt
#       - web-root:/var/www/html
#     depends_on:
#       - webserver
#     command: certonly --webroot --webroot-path=/var/www/html --email sammy@example.com --agree-tos --no-eff-email --staging -d example.com  -d www.example.com

# volumes:
#   certbot-etc:
#   certbot-var:
#   web-root:
#     driver: local
#     driver_opts:
#       type: none
#       device: /home/alaka/Node_Applications/SampleNodeApp/views/
#       o: bind

# networks:
#   app-network:
#     driver: bridge